Previously, Javaâ€™s Arrays.sort method used Quicksort for arrays of primitives and Merge sort for arrays of objects. 
In the latest versions of Java, Arrays.sort method and Collection.sort() uses Timsort.

--------------------------------------------Merge Sort:---------------------------------------------------
1. Divide & conquer algorithm
2. Recursive algorithm
3. Two phases : splitting & merging
4. Splitting phase leads to faster sorting during Merging phase
5. Splitting is logical. We don't create new array
-----Splitting Phase:
1. start with an unsorted array
2. Divide the array in to two arrays, which are unsorted.
   The first array is the left array and second array is the right array
3. split the left and right arrays into two array each
4. keep splitting until all the arrays have only one element each, these arrays are sorted.
-----Merging Phase:
1. Merge every left/right pair of sibling arrays into a sorted array
2. After the first merge, we'll have a bunch of 2-element sorted arrays
3. Then merge those sorted arrays(left/right siblings) to end up with a bunch of 4-element sorted arrays
4. Repeat until you have a single sorted array
Remark - 
1. Not a in-place. Use a temporary array
2. Time complexity - O(nlogn) - base 2. We're repeatedly dividing the array in half during the splitting phase.
3. stable algorithm
